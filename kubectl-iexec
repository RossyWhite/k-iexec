#!/usr/bin/env bash

set -eo pipefail

PROGNAME="kubectl iexec"
KUBECTL_IEXEC_DEFAULT_COMMAND=${KUBECTL_IEXEC_DEFAULT_COMMAND:=/bin/sh}

_KUBECTL_IEXEC_VERSION="0.0.1"

show_usage() {
  cat <<_EOS_ 1>&2
Usage: $PROGNAME [OPTIONS...] <query> -- <command>
OPTIONS:
  -h, --help               Show help for '$PROGNAME'
  -n, --namespace string   The name of namespace to use
  --context string         The name of kubeconfig context to use
Examples: 
  $PROGNAME -n kube-system kube-proxy -- /bin/sh
  $PROGNAME istiod --context my-cluster
_EOS_
}

prompt_help () {
  printf "See '$PROGNAME --help' for usage.\n"
}

iexec() {
  kcmd="kubectl get pod"
  if [[ -v OPT_NS ]]; then cmd+=" -n $OPT_NS"; else cmd+=" -A"; fi
  if [[ -v OPT_CTX ]]; then cmd+=" --context $OPT_CTX"; fi
  kcmd+=" --field-selector=status.phase=Running -o custom-columns=\"Namespace:.metadata.namespace,NAME:.metadata.name,Containers:.spec.containers[*].name\""

  read ns pod containers < <(eval $kcmd | fzf $fzf_options --prompt "Select Pod: " --query "$OPT_QUERY" --ansi --exit-0 --header-lines=1  --with-nth 1,2 --height 40%)

  container=$(echo ${containers} | tr ',' '\n' | fzf --exit-0 --select-1 --ansi --prompt "Select Container: ")

  cmd=${OPT_CMD-${KUBECTL_IEXEC_DEFAULT_COMMAND}}
  ctx=${OPT_CTX-$(kubectl config current-context)}

  kubectl exec -it $pod -c $container -n $ns --context $ctx -- $cmd
}

while (( $# > 0 )); do
  case "$1" in
    -h | --help)
      show_usage
      exit 1
      ;;
    --version)
      echo ${_KUBECTL_IEXEC_VERSION}
      exit 1
      ;;
    -n | --namespace* )
      if [[ "$1" =~ = ]]; then OPT_NS="${1#*=}"; else OPT_NS="$2" && shift; fi
      ;;
    --context* )
      if [[ "$1" =~ = ]]; then OPT_CTX="${1#*=}"; else OPT_CTX="$2" && shift; fi
      ;;
    -- )
      shift
      OPT_CMD="$@"
      break
      ;;
    -* | --* )
      printf "Error: unknown flag: $1\n"
      prompt_help
      exit 1
      ;;
    * )
      OPT_QUERY="$1"
      ;;
  esac
  shift
done

iexec
